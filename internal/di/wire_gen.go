// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"clean-arch-gin/internal/adapters/controllers"
	"clean-arch-gin/internal/adapters/repositories"
	"clean-arch-gin/internal/adapters/usecases"
	"clean-arch-gin/internal/infrastructure/config"
	"gorm.io/gorm"
)

// Injectors from wire.go:

// InitializeUserController initializes a user controller with all dependencies
func InitializeUserController(db *gorm.DB, cfg *config.Config) *controllers.UserController {
	userRepository := repositories.NewUserRepository(db)
	userUseCase := usecases.NewUserUseCase(userRepository)
	userController := controllers.NewUserController(userUseCase)
	return userController
}

// InitializeApplication initializes the entire application
func InitializeApplication(db *gorm.DB, cfg *config.Config) *Application {
	userRepository := repositories.NewUserRepository(db)
	userUseCase := usecases.NewUserUseCase(userRepository)
	userController := controllers.NewUserController(userUseCase)
	application := &Application{
		UserController: userController,
		Config:         cfg,
	}
	return application
}

// wire.go:

// Application represents the entire application with all dependencies
type Application struct {
	UserController *controllers.UserController
	Config         *config.Config
}
